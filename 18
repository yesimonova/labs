#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <malloc.h>
#include <time.h>

int swap (int *k1,int *k2) {
    *k1+=*k2;
    *k2=*k1-*k2;
    *k1=*k1-*k2;
}

int main()
{
    printf("Выберите номер подзадания.\n");
    srand(time(NULL));
    int answ;
    scanf ("%d",&answ);
    switch (answ) {
        case 1:
            printf("Это задание на смену содержимого двух массивов одинакового размера.\n");
            int *a;
            int *b;
            int N;
            printf("Введите положительное число N, которое является размером массива.\n");
            scanf("%d",&N);
            a = (int*)malloc(N*sizeof(int));
            for (int i=0;i<N;i++) {
                a[i]=rand()%100;
            }
            b = (int*)malloc(N*sizeof(int));
            for (int i=0;i<N;i++) {
                b[i]=rand()%100;
            }
            printf("Сгенерированный массив A:\n");
            for (int i=0;i<N;i++) {
                printf("%d ",a[i]);
            }
            printf("\n");
            printf("Сгенерированный массив B:\n");
            for (int i=0;i<N;i++) {
                printf("%d ",b[i]);
            }
            printf("\n");
            for (int i=0;i<N;i++) {
                a[i]+=b[i];
                b[i]=a[i]-b[i];
                a[i]=a[i]-b[i];
            }
            printf("Массив A:\n");
            for (int i=0;i<N;i++) {
                printf("%d ",a[i]);
            }
            printf("\n");
            printf("Массив B:\n");
            for (int i=0;i<N;i++) {
                printf("%d ",b[i]);
            }
            free(a);
            free(b);
            break;
        case 2:
            printf("Это задание на создание нового массива из уже имеющегося по правилу: элемент B(K) равен среднему арифметическому элементов массива A с номерами от 1 до K.\n");
            double *a1;
            double *b1;
            int N1;
            printf("Введите положительное число N, которое является размером массива.\n");
            scanf("%d",&N1);
            a1 = (double*)malloc(N1*sizeof(double));
            b1 = (double*)malloc(N1*sizeof(double));
            for (int i=0;i<N1;i++) {
                a1[i]=rand()%100;
            }
            printf("Сгенерированный массив A:\n");
            for (int i=0;i<N1;i++) {
                printf("%lf ",a1[i]);
            }
            printf("\n");
            for (int i=0;i<N1;i++) {
                b1[i]=0;
                for (int j=0;j<=i;j++) {
                    b1[i]+=a1[j];
                }
                b1[i]/=i+1;
            }
            printf("Новый массив B:\n");
            for (int i=0;i<N1;i++) {
                printf("%lf ",b1[i]);
            }
            free(a1);
            free(b1);
            break;
        case 3:
            printf("Это задание на увеличение всех нечётных чисел, содержащихся в массиве, на исходное значение последнего нечётного числа.\n");
            int *a2;
            int N2;
            printf("Введите положительное число N, которое является размером массива.\n");
            scanf("%d",&N2);
            a2 = (int*)malloc(N2*sizeof(int));
            for (int i=0;i<N2;i++) {
                a2[i]=rand()%100;
            }
            printf("Сгенерированный массив:\n");
            for (int i=0;i<N2;i++) {
                printf("%d ",a2[i]);
            }
            printf("\n");
            int nechet;
            for (int i=N2-1;i>=0;i--) {
                if (a2[i]%2!=0) {
                    nechet=a2[i];
                    break;
                }
            }
            int k;
            for(k=N2;k>=0;k--) {
                if (a2[k]%2!=0) {
                    a2[k]+=nechet;
                }
            }
            printf("Новый массив:\n");
            for (int i=0;i<N2;i++) {
                printf("%d ",a2[i]);
            }
            free(a2);
            break;
        case 4:
            printf("Это задание на обнуление элементов массива, расположенных между минимальным и максимальными элементами (не включая их).\n");
            int *a3;
            int N3;
            printf("Введите число N, которое является размером массива.\n");
            scanf("%d",&N3);
            a3 = (int*)malloc(N3*sizeof(int));
            for (int i=0;i<N3;i++) {
                a3[i]=rand()%100;
            }
            printf("Сгенерированный массив:\n");
            for (int i=0;i<N3;i++) {
                printf("%d ",a3[i]);
            }
            printf("\n");
            int min=0,max=0;
            for (int i=N3-1; i>=0; --i){
                if (a3[min]>a3[i]) {
                    min=i;
                }
            }
            for (int i=N3-1; i>=0; --i) {
                if (a3[max]<a3[i]) {
                    max=i;
                }
            }
            printf("%d",max);
            printf("%d",min);
            if (max<min) {
                max+=min;
                min=max-min;
                max=max-min;
            }
            for (int i=min+1;i<min+(max-min);i++) {
                a3[i]=0;
            }
            printf("Новый массив:\n");
            for (int i=0;i<N3;i++) {
                printf("%d ",a3[i]);
            }
            free(a3);
            break;
        case 5:
            printf("Это задание на вывод номеров одинаковых элементов массива в порядке возрастания.\n");
            int *a4;
            int N4;
            printf("Введите число N, которое является размером массива.\n");
            scanf("%d",&N4);
            a4 = (int*)malloc(N4*sizeof(int));
            printf("Введите элементы массива (первый элемент не отсортирован, остальные – по возрастанию).\n");
            for (int i=0;i<N4;i++) {
                scanf("%d",&a4[i]);
            }
            printf("Массив:\n");
            for (int i=0;i<N4;i++) {
                printf("%d ",a4[i]);
            }
            printf("\n");
            for (int i=1;i<N4;i++) {
                if (a4[i-1]>a4[i]) {
                    swap(&a4[i-1],&a4[i]);
                }
                else break;
            }
            printf("Отсортированный массив:\n");
            for (int i=0;i<N4;i++) {
                printf("%d ",a4[i]);
            }
            free(a4);
            break;
        default:
            printf("Неверный номер подзадания.");
    }
    return 0;
}
